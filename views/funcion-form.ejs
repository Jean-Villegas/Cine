<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agregar Funci√≥n - CineApp</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .header {
            background: rgba(255, 255, 255, 0.95);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            text-align: center;
            margin-bottom: 30px;
        }
        .header h1 {
            color: #2c3e50;
            margin: 0;
            font-size: 2.5em;
        }
        .form-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2c3e50;
            font-weight: bold;
        }
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ecf0f1;
            border-radius: 8px;
            font-size: 1em;
            transition: border-color 0.3s ease;
            box-sizing: border-box;
        }
        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #3498db;
        }
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        .btn {
            background: #3498db;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin: 5px;
            font-size: 1em;
            transition: background 0.3s ease;
        }
        .btn:hover {
            background: #2980b9;
        }
        .btn-success {
            background: #27ae60;
        }
        .btn-success:hover {
            background: #229954;
        }
        .btn-secondary {
            background: #95a5a6;
        }
        .btn-secondary:hover {
            background: #7f8c8d;
        }
        .form-actions {
            text-align: center;
            margin-top: 30px;
        }
        .loading {
            text-align: center;
            color: white;
            font-size: 1.2em;
            padding: 40px;
        }
        .success {
            background: #27ae60;
            color: white;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
            margin: 20px 0;
        }
        .error {
            background: #e74c3c;
            color: white;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
            margin: 20px 0;
        }
        .back-btn {
            position: absolute;
            top: 20px;
            left: 20px;
            background: rgba(255, 255, 255, 0.9);
            color: #2c3e50;
            padding: 10px 20px;
            border-radius: 8px;
            text-decoration: none;
            font-weight: bold;
        }
        .required {
            color: #e74c3c;
        }
        .info-box {
            background: #e3f2fd;
            border: 1px solid #2196f3;
            border-radius: 8px;
            padding: 15px;
            margin: 20px 0;
            color: #1976d2;
        }
    </style>
</head>
<body>
    <a href="/funciones" class="back-btn">‚Üê Volver a Funciones</a>
    
    <div class="container">
        <div class="header">
            <h1>‚ûï Agregar Nueva Funci√≥n</h1>
            <p>Programa una nueva funci√≥n en el cine</p>
        </div>

        <div class="form-container">
            <div class="info-box">
                <strong>‚ÑπÔ∏è Informaci√≥n:</strong> Primero debes tener pel√≠culas y salas disponibles. 
                La hora de fin se calcular√° autom√°ticamente basada en la duraci√≥n de la pel√≠cula.
            </div>

            <form id="funcionForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="peliculaId">Pel√≠cula <span class="required">*</span></label>
                        <select id="peliculaId" name="peliculaId" required>
                            <option value="">Selecciona una pel√≠cula</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="salaId">Sala <span class="required">*</span></label>
                        <select id="salaId" name="salaId" required>
                            <option value="">Selecciona una sala</option>
                        </select>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="fecha">Fecha <span class="required">*</span></label>
                        <input type="date" id="fecha" name="fecha" required>
                    </div>
                    <div class="form-group">
                        <label for="horaInicio">Hora de Inicio <span class="required">*</span></label>
                        <input type="time" id="horaInicio" name="horaInicio" required>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="precio">Precio ($)</label>
                        <input type="number" id="precio" name="precio" min="0" step="0.01">
                    </div>
                    <div class="form-group">
                        <label for="tipo">Tipo de Funci√≥n</label>
                        <select id="tipo" name="tipo">
                            <option value="Normal">Normal</option>
                            <option value="Estreno">Estreno</option>
                            <option value="VIP">VIP</option>
                            <option value="Matine">Matine</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label for="estado">Estado</label>
                    <select id="estado" name="estado">
                        <option value="activa">Activa</option>
                        <option value="agotada">Agotada</option>
                        <option value="cancelada">Cancelada</option>
                    </select>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-success">‚úÖ Agregar Funci√≥n</button>
                    <button type="button" class="btn btn-secondary" onclick="resetForm()">üîÑ Limpiar Formulario</button>
                    <a href="/funciones" class="btn btn-secondary">‚ùå Cancelar</a>
                </div>
            </form>
        </div>

        <div id="messageContainer"></div>
    </div>

    <script>
        const API_BASE = '/api/funciones';
        const PELICULAS_API = '/api/peliculas';
        const SALAS_API = '/api/salas';

        // Cargar pel√≠culas y salas al cargar la p√°gina
        window.onload = async function() {
            await loadPeliculas();
            await loadSalas();
            
            // Establecer fecha por defecto (hoy)
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('fecha').value = today;
        };

        async function loadPeliculas() {
            try {
                const response = await fetch(PELICULAS_API + '/activas');
                const data = await response.json();
                
                if (data.success) {
                    const select = document.getElementById('peliculaId');
                    data.data.forEach(pelicula => {
                        const option = document.createElement('option');
                        option.value = pelicula.id;
                        option.textContent = `${pelicula.titulo} (${pelicula.duracion} min)`;
                        option.dataset.duracion = pelicula.duracion;
                        option.dataset.precio = pelicula.precio;
                        select.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error al cargar pel√≠culas:', error);
            }
        }

        async function loadSalas() {
            try {
                const response = await fetch(SALAS_API + '/activas');
                const data = await response.json();
                
                if (data.success) {
                    const select = document.getElementById('salaId');
                    data.data.forEach(sala => {
                        const option = document.createElement('option');
                        option.value = sala.id;
                        option.textContent = `${sala.numero} - ${sala.tipo} (${sala.capacidad} asientos)`;
                        option.dataset.capacidad = sala.capacidad;
                        select.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error al cargar salas:', error);
            }
        }

        // Auto-calcular hora de fin y precio cuando cambie la pel√≠cula
        document.getElementById('peliculaId').addEventListener('change', function() {
            const selectedOption = this.options[this.selectedIndex];
            if (selectedOption.dataset.precio) {
                document.getElementById('precio').value = selectedOption.dataset.precio;
            }
        });

        document.getElementById('peliculaId').addEventListener('change', updateHoraFin);
        document.getElementById('horaInicio').addEventListener('change', updateHoraFin);

        function updateHoraFin() {
            const peliculaSelect = document.getElementById('peliculaId');
            const horaInicio = document.getElementById('horaInicio').value;
            
            if (peliculaSelect.value && horaInicio) {
                const duracion = parseInt(peliculaSelect.options[peliculaSelect.selectedIndex].dataset.duracion);
                if (duracion) {
                    const [horas, minutos] = horaInicio.split(':').map(Number);
                    const totalMinutos = horas * 60 + minutos + duracion;
                    const finHoras = Math.floor(totalMinutos / 60);
                    const finMinutos = totalMinutos % 60;
                    const horaFin = `${finHoras.toString().padStart(2, '0')}:${finMinutos.toString().padStart(2, '0')}`;
                    
                    // Mostrar hora de fin calculada
                    const infoBox = document.querySelector('.info-box');
                    infoBox.innerHTML = `
                        <strong>‚ÑπÔ∏è Informaci√≥n:</strong> 
                        Hora de fin calculada: <strong>${horaFin}</strong> 
                        (${duracion} minutos de duraci√≥n)
                    `;
                }
            }
        }

        document.getElementById('funcionForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const peliculaSelect = document.getElementById('peliculaId');
            const duracion = parseInt(peliculaSelect.options[peliculaSelect.selectedIndex].dataset.duracion);
            const salaSelect = document.getElementById('salaId');
            const capacidad = parseInt(salaSelect.options[salaSelect.selectedIndex].dataset.capacidad);
            
            // Calcular hora de fin
            const [horas, minutos] = formData.get('horaInicio').split(':').map(Number);
            const totalMinutos = horas * 60 + minutos + duracion;
            const finHoras = Math.floor(totalMinutos / 60);
            const finMinutos = totalMinutos % 60;
            const horaFin = `${finHoras.toString().padStart(2, '0')}:${finMinutos.toString().padStart(2, '0')}`;

            const funcionData = {
                peliculaId: parseInt(formData.get('peliculaId')),
                salaId: parseInt(formData.get('salaId')),
                fecha: formData.get('fecha'),
                horaInicio: formData.get('horaInicio'),
                horaFin: horaFin,
                precio: parseFloat(formData.get('precio')) || 0,
                asientosDisponibles: capacidad,
                asientosOcupados: 0,
                estado: formData.get('estado'),
                tipo: formData.get('tipo')
            };

            try {
                showLoading();
                
                const response = await fetch(API_BASE, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(funcionData)
                });

                const data = await response.json();
                
                if (data.success) {
                    showSuccess('¬°Funci√≥n agregada exitosamente!');
                    resetForm();
                    setTimeout(() => {
                        window.location.href = '/funciones';
                    }, 2000);
                } else {
                    showError('Error al agregar la funci√≥n: ' + data.message);
                }
            } catch (error) {
                showError('Error de conexi√≥n: ' + error.message);
            }
        });

        function resetForm() {
            document.getElementById('funcionForm').reset();
            document.getElementById('estado').value = 'activa';
            document.getElementById('tipo').value = 'Normal';
            
            // Restablecer fecha
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('fecha').value = today;
        }

        function showLoading() {
            const container = document.getElementById('messageContainer');
            container.innerHTML = '<div class="loading">üîÑ Agregando funci√≥n...</div>';
        }

        function showSuccess(message) {
            const container = document.getElementById('messageContainer');
            container.innerHTML = `<div class="success">${message}</div>`;
        }

        function showError(message) {
            const container = document.getElementById('messageContainer');
            container.innerHTML = `<div class="error">${message}</div>`;
        }
    </script>
</body>
</html>

