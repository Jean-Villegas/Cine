<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Sistema de Cine</title>
    <link rel="stylesheet" href="/stylesheets/main.css">
    <link rel="stylesheet" href="/stylesheets/modules.css">
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h1>üé¨ Cine API</h1>
            <p>Sistema de Gesti√≥n</p>
        </div>
        <nav class="sidebar-nav">
            <div class="nav-section">
                <h3>M√≥dulos</h3>
                <a href="/peliculas" class="nav-item">
                    <span class="method get">üìΩÔ∏è</span>
                    <span class="endpoint">Pel√≠culas</span>
                </a>
                <a href="/usuarios" class="nav-item active">
                    <span class="method post">üë•</span>
                    <span class="endpoint">Usuarios</span>
                </a>
                <a href="/salas" class="nav-item">
                    <span class="method put">üè¢</span>
                    <span class="endpoint">Salas</span>
                </a>
                <a href="/funciones" class="nav-item">
                    <span class="method delete">üé≠</span>
                    <span class="endpoint">Funciones</span>
                </a>
                <a href="/boletos" class="nav-item">
                    <span class="method get">üé´</span>
                    <span class="endpoint">Boletos</span>
                </a>
            </div>
            <div class="nav-section">
                <h3>API</h3>
                <a href="/" class="nav-item">
                    <span class="method get">üìö</span>
                    <span class="endpoint">Documentaci√≥n</span>
                </a>
            </div>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <div class="header">
                <h1>üë• <%= title %></h1>
                <p><%= message %></p>
            </div>

            <button class="btn btn-add" onclick="openModal('usuarioModal')">
                ‚ûï Agregar Nuevo Usuario
            </button>

            <div class="cards-container" id="usuariosContainer">
                <!-- Los usuarios se cargar√°n aqu√≠ din√°micamente -->
            </div>
        </div>
    </div>

    <!-- Modal para Crear/Editar Usuario -->
    <div id="usuarioModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Nuevo Usuario</h2>
                <span class="close" onclick="closeModal('usuarioModal')">&times;</span>
            </div>
            <form id="usuarioForm">
                <div class="form-group">
                    <label class="form-label" for="nombre">Nombre *</label>
                    <input type="text" class="form-input" id="nombre" name="nombre" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="apellido">Apellido *</label>
                    <input type="text" class="form-input" id="apellido" name="apellido" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="email">Email *</label>
                    <input type="email" class="form-input" id="email" name="email" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="telefono">Tel√©fono</label>
                    <input type="tel" class="form-input" id="telefono" name="telefono">
                </div>
                <div class="form-group">
                    <label class="form-label" for="fecha_nacimiento">Fecha de Nacimiento</label>
                    <input type="date" class="form-input" id="fecha_nacimiento" name="fecha_nacimiento">
                </div>
                <div class="form-group">
                    <label class="form-label" for="tipo_usuario">Tipo de Usuario</label>
                    <select class="form-select" id="tipo_usuario" name="tipo_usuario">
                        <option value="cliente">Cliente</option>
                        <option value="vip">VIP</option>
                        <option value="admin">Administrador</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label" for="estado">Estado</label>
                    <select class="form-select" id="estado" name="estado">
                        <option value="activo">Activo</option>
                        <option value="inactivo">Inactivo</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label" for="puntos">Puntos</label>
                    <input type="number" class="form-input" id="puntos" name="puntos" min="0" value="0">
                </div>
                <div class="modal-actions">
                    <button type="button" class="btn btn-primary" onclick="closeModal('usuarioModal')">Cancelar</button>
                    <button type="submit" class="btn btn-add">Guardar Usuario</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let usuarios = [];
        let editingId = null;

        // Cargar usuarios al iniciar
        document.addEventListener('DOMContentLoaded', function() {
            loadUsuarios();
        });

        // Cargar usuarios desde la API
        async function loadUsuarios() {
            try {
                const response = await fetch('/api/usuarios');
                const data = await response.json();
                usuarios = data.data || [];
                renderUsuarios();
            } catch (error) {
                console.error('Error al cargar usuarios:', error);
                alert('Error al cargar los usuarios');
            }
        }

        // Renderizar usuarios en cards
        function renderUsuarios() {
            const container = document.getElementById('usuariosContainer');
            container.innerHTML = '';

            usuarios.forEach(usuario => {
                const card = createUsuarioCard(usuario);
                container.appendChild(card);
            });
        }

        // Crear card de usuario
        function createUsuarioCard(usuario) {
            const card = document.createElement('div');
            card.className = 'entity-card';
            
            const fullName = `${usuario.nombre || ''} ${usuario.apellido || ''}`.trim() || 'Sin nombre';
            const tipoIcon = usuario.tipo_usuario === 'admin' ? 'üëë' : 
                           usuario.tipo_usuario === 'vip' ? '‚≠ê' : 
                           usuario.tipo_usuario === 'empleado' ? 'üë®‚Äçüíº' : 'üë§';
            
            card.innerHTML = `
                <div class="card-header">
                    <h3 class="card-title">${tipoIcon} ${fullName}</h3>
                    <span class="card-status ${usuario.estado === 'activo' ? 'status-active' : 'status-inactive'}">
                        ${usuario.estado || 'N/A'}
                    </span>
                </div>
                <div class="card-content">
                    <div class="card-field">
                        <span class="card-field-label">Email:</span>
                        <span class="card-field-value">${usuario.email || 'No especificado'}</span>
                    </div>
                    <div class="card-field">
                        <span class="card-field-label">Tel√©fono:</span>
                        <span class="card-field-value">${usuario.telefono || 'No especificado'}</span>
                    </div>
                    <div class="card-field">
                        <span class="card-field-label">Tipo:</span>
                        <span class="card-field-value">${usuario.tipo_usuario || 'No especificado'}</span>
                    </div>
                    <div class="card-field">
                        <span class="card-field-label">Fecha Nacimiento:</span>
                        <span class="card-field-value">${usuario.fecha_nacimiento ? new Date(usuario.fecha_nacimiento).toLocaleDateString() : 'No especificada'}</span>
                    </div>
                    <div class="card-field">
                        <span class="card-field-label">Registrado:</span>
                        <span class="card-field-value">${usuario.fecha_registro ? new Date(usuario.fecha_registro).toLocaleDateString() : 'No especificada'}</span>
                    </div>
                    <div class="card-field">
                        <span class="card-field-label">Puntos:</span>
                        <span class="card-field-value">${usuario.puntos || '0'}</span>
                    </div>
                </div>
                <div class="card-actions">
                    <button class="btn btn-edit" onclick="editUsuario(${usuario.id})">
                        ‚úèÔ∏è Editar
                    </button>
                    <button class="btn btn-delete" onclick="deleteUsuario(${usuario.id})">
                        üóëÔ∏è Eliminar
                    </button>
                </div>
            `;
            return card;
        }

        // Abrir modal
        function openModal(modalId) {
            document.getElementById(modalId).classList.add('show');
            editingId = null;
            document.getElementById('modalTitle').textContent = 'Nuevo Usuario';
            document.getElementById('usuarioForm').reset();
        }

        // Cerrar modal
        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
            editingId = null;
        }

        // Editar usuario
        function editUsuario(id) {
            const usuario = usuarios.find(u => u.id === id);
            if (!usuario) return;

            editingId = id;
            document.getElementById('modalTitle').textContent = 'Editar Usuario';
            
            // Llenar formulario
            Object.keys(usuario).forEach(key => {
                const input = document.getElementById(key);
                if (input) {
                    input.value = usuario[key] || '';
                }
            });

            document.getElementById('usuarioModal').classList.add('show');
        }

        // Eliminar usuario
        async function deleteUsuario(id) {
            if (!confirm('¬øEst√°s seguro de que quieres eliminar este usuario?')) return;

            try {
                const response = await fetch(`/api/usuarios/${id}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    await loadUsuarios();
                    alert('Usuario eliminado exitosamente');
                } else {
                    alert('Error al eliminar el usuario');
                }
            } catch (error) {
                console.error('Error al eliminar usuario:', error);
                alert('Error al eliminar el usuario');
            }
        }

        // Manejar env√≠o del formulario
        document.getElementById('usuarioForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());

            try {
                const url = editingId ? `/api/usuarios/${editingId}` : '/api/usuarios';
                const method = editingId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    closeModal('usuarioModal');
                    await loadUsuarios();
                    alert(editingId ? 'Usuario actualizado exitosamente' : 'Usuario creado exitosamente');
                } else {
                    alert('Error al guardar el usuario');
                }
            } catch (error) {
                console.error('Error al guardar usuario:', error);
                alert('Error al guardar el usuario');
            }
        });

        // Cerrar modal al hacer clic fuera
        window.onclick = function(event) {
            const modal = document.getElementById('usuarioModal');
            if (event.target === modal) {
                closeModal('usuarioModal');
            }
        }
    </script>
</body>
</html>
